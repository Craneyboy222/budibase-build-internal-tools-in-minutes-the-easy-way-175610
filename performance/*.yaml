kind: Deployment
apiVersion: apps/v1
metadata:
  name: app-deployment
spec:
  replicas: 3
  selector:
    matchLabels:
      app: my-app
  template:
    metadata:
      labels:
        app: my-app
    spec:
      containers:
      - name: my-app
        image: my-app-image:latest
        ports:
        - containerPort: 80
        env:
        - name: NODE_ENV
          value: 'production'
        resources:
          limits:
            cpu: "500m"
            memory: "512Mi"
          requests:
            cpu: "250m"
            memory: "256Mi"
      - name: redis
        image: redis:6.0.9
        ports:
        - containerPort: 6379

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: app-ingress
spec:
  rules:
  - host: "myapp.example.com"
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: app-service
            port:
              number: 80

---
apiVersion: v1
kind: Service
metadata:
  name: app-service
spec:
  selector:
    app: my-app
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80
  type: LoadBalancer

# CDN Configuration
apiVersion: cloudflare.com/v1
kind: Zone
metadata:
  name: static-assets
spec:
  zone: "myapp.example.com"
  cdn:
    enabled: true
    cacheControl: max-age=31536000

# Performance Monitoring
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: app-monitor
spec:
  selector:
    matchLabels:
      app: my-app
  endpoints:
  - port: web
    interval: 30s
    path: /metrics

# Load Testing Configuration
apiVersion: batch/v1
kind: Job
metadata:
  name: load-test
spec:
  template:
    spec:
      containers:
      - name: load-tester
        image: loadimpact/k6
        args: ["run", "--vus", "10", "--duration", "30s", "/scripts/test.js"]
      restartPolicy: Never