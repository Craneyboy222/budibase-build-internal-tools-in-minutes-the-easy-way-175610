"use strict";(()=>{var a={};a.id=804,a.ids=[804],a.modules={34996:(a,b,c)=>{c.r(b),c.d(b,{config:()=>s,default:()=>r,handler:()=>u});var d={};c.r(d),c.d(d,{default:()=>o});var e=c(29046),f=c(8667),g=c(33480),h=c(86435);let i=require("passport");var j=c.n(i);let k=require("passport-oauth2"),l=require("jsonwebtoken");var m=c.n(l);j().use(new k.Strategy({authorizationURL:"https://example.com/auth",tokenURL:"https://example.com/token",clientID:"your-client-id",clientSecret:"your-client-secret",callbackURL:"https://your-app.com/callback"},(a,b,c,d)=>{d(null,c)}));var n=c(41715);async function o(a,b){let{method:c}=a;try{await (0,n.$)();let d=a.headers.authorization?.split(" ")[1];if(!d||!function(a){let b=function(a){try{return m().verify(a,"your-secret-key")}catch(a){throw Error("Invalid token")}}(a);return b&&"admin"===b.role}(d))return b.status(403).json({error:"Access denied"});if("GET"===c)return b.status(200).json({message:"Admin operations successful"});b.setHeader("Allow",["GET"]),b.status(405).end(`Method ${c} Not Allowed`)}catch(a){console.error("Admin API error:",a),b.status(500).json({error:"Internal server error"})}}var p=c(58112),q=c(18766);let r=(0,h.M)(d,"default"),s=(0,h.M)(d,"config"),t=new g.PagesAPIRouteModule({definition:{kind:f.A.PAGES_API,page:"/api/admin",pathname:"/api/admin",bundlePath:"",filename:""},userland:d,distDir:".next",relativeProjectDir:""});async function u(a,b,c){let d=await t.prepare(a,b,{srcPage:"/api/admin"});if(!d){b.statusCode=400,b.end("Bad Request"),null==c.waitUntil||c.waitUntil.call(c,Promise.resolve());return}let{query:f,params:g,prerenderManifest:h,routerServerContext:i}=d;try{let c=a.method||"GET",d=(0,p.getTracer)(),e=d.getActiveScopeSpan(),j=t.instrumentationOnRequestError.bind(t),k=async e=>t.render(a,b,{query:{...f,...g},params:g,allowedRevalidateHeaderKeys:[],multiZoneDraftMode:!1,trustHostHeader:!1,previewProps:h.preview,propagateError:!1,dev:t.isDev,page:"/api/admin",internalRevalidate:null==i?void 0:i.revalidate,onError:(...b)=>j(a,...b)}).finally(()=>{if(!e)return;e.setAttributes({"http.status_code":b.statusCode,"next.rsc":!1});let f=d.getRootSpanAttributes();if(!f)return;if(f.get("next.span_type")!==q.BaseServerSpan.handleRequest)return void console.warn(`Unexpected root span type '${f.get("next.span_type")}'. Please report this Next.js issue https://github.com/vercel/next.js`);let g=f.get("next.route");if(g){let a=`${c} ${g}`;e.setAttributes({"next.route":g,"http.route":g,"next.span_name":a}),e.updateName(a)}else e.updateName(`${c} ${a.url}`)});e?await k(e):await d.withPropagatedContext(a.headers,()=>d.trace(q.BaseServerSpan.handleRequest,{spanName:`${c} ${a.url}`,kind:p.SpanKind.SERVER,attributes:{"http.method":c,"http.target":a.url}},k))}catch(a){if(t.isDev)throw a;(0,e.sendError)(b,500,"Internal Server Error")}finally{null==c.waitUntil||c.waitUntil.call(c,Promise.resolve())}}},41715:(a,b,c)=>{c.d(b,{$:()=>h});let d=require("@prisma/client");var e=c(56037),f=c.n(e);new d.PrismaClient;let g=process.env.DATABASE_URL||"mongodb://localhost:27017/enterprise";async function h(){0===f().connection.readyState&&(await f().connect(g),console.log("Connected to database"))}},56037:a=>{a.exports=require("mongoose")},75600:a=>{a.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")}};var b=require("../../webpack-api-runtime.js");b.C(a);var c=b.X(0,[169],()=>b(b.s=34996));module.exports=c})();