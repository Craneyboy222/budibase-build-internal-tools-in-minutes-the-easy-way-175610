"use strict";(()=>{var a={};a.id=244,a.ids=[244],a.modules={41715:(a,b,c)=>{c.d(b,{$:()=>h});let d=require("@prisma/client");var e=c(56037),f=c.n(e);new d.PrismaClient;let g=process.env.DATABASE_URL||"mongodb://localhost:27017/enterprise";async function h(){0===f().connection.readyState&&(await f().connect(g),console.log("Connected to database"))}},56037:a=>{a.exports=require("mongoose")},56044:(a,b,c)=>{c.r(b),c.d(b,{config:()=>r,default:()=>q,handler:()=>t});var d={};c.r(d),c.d(d,{default:()=>n});var e=c(29046),f=c(8667),g=c(33480),h=c(86435),i=c(41715),j=c(56037),k=c.n(j);let l=new j.Schema({user:{type:j.Schema.Types.ObjectId,ref:"User",required:!0},products:[{product:{type:j.Schema.Types.ObjectId,ref:"Product",required:!0},quantity:{type:Number,required:!0,min:1}}],totalAmount:{type:Number,required:!0},status:{type:String,required:!0,enum:["pending","completed","cancelled"],default:"pending"},createdAt:{type:Date,default:Date.now},updatedAt:{type:Date,default:Date.now}});l.pre("save",function(a){this.updatedAt=new Date,a()});let m=k().model("Order",l);async function n(a,b){let{method:c}=a;try{switch(await (0,i.$)(),c){case"GET":let d=await m.find({});return b.status(200).json(d);case"POST":let{productIds:e,userId:f,total:g}=a.body;if(!e||!f||!g)return b.status(400).json({error:"Missing required fields"});let h=new m({productIds:e,userId:f,total:g});return await h.save(),b.status(201).json(h);default:b.setHeader("Allow",["GET","POST"]),b.status(405).end(`Method ${c} Not Allowed`)}}catch(a){console.error("Orders API error:",a),b.status(500).json({error:"Internal server error"})}}var o=c(58112),p=c(18766);let q=(0,h.M)(d,"default"),r=(0,h.M)(d,"config"),s=new g.PagesAPIRouteModule({definition:{kind:f.A.PAGES_API,page:"/api/orders",pathname:"/api/orders",bundlePath:"",filename:""},userland:d,distDir:".next",relativeProjectDir:""});async function t(a,b,c){let d=await s.prepare(a,b,{srcPage:"/api/orders"});if(!d){b.statusCode=400,b.end("Bad Request"),null==c.waitUntil||c.waitUntil.call(c,Promise.resolve());return}let{query:f,params:g,prerenderManifest:h,routerServerContext:i}=d;try{let c=a.method||"GET",d=(0,o.getTracer)(),e=d.getActiveScopeSpan(),j=s.instrumentationOnRequestError.bind(s),k=async e=>s.render(a,b,{query:{...f,...g},params:g,allowedRevalidateHeaderKeys:[],multiZoneDraftMode:!1,trustHostHeader:!1,previewProps:h.preview,propagateError:!1,dev:s.isDev,page:"/api/orders",internalRevalidate:null==i?void 0:i.revalidate,onError:(...b)=>j(a,...b)}).finally(()=>{if(!e)return;e.setAttributes({"http.status_code":b.statusCode,"next.rsc":!1});let f=d.getRootSpanAttributes();if(!f)return;if(f.get("next.span_type")!==p.BaseServerSpan.handleRequest)return void console.warn(`Unexpected root span type '${f.get("next.span_type")}'. Please report this Next.js issue https://github.com/vercel/next.js`);let g=f.get("next.route");if(g){let a=`${c} ${g}`;e.setAttributes({"next.route":g,"http.route":g,"next.span_name":a}),e.updateName(a)}else e.updateName(`${c} ${a.url}`)});e?await k(e):await d.withPropagatedContext(a.headers,()=>d.trace(p.BaseServerSpan.handleRequest,{spanName:`${c} ${a.url}`,kind:o.SpanKind.SERVER,attributes:{"http.method":c,"http.target":a.url}},k))}catch(a){if(s.isDev)throw a;(0,e.sendError)(b,500,"Internal Server Error")}finally{null==c.waitUntil||c.waitUntil.call(c,Promise.resolve())}}},75600:a=>{a.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")}};var b=require("../../webpack-api-runtime.js");b.C(a);var c=b.X(0,[169],()=>b(b.s=56044));module.exports=c})();